{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'MyFormEnter',\n  props: {},\n  data() {\n    return {\n      showPassword: false,\n      pasType: 'password',\n      name: '',\n      surname: '',\n      middleName: '',\n      password: \"\",\n      username: \"\",\n      fullname: '',\n      names: '',\n      data: 'User register success',\n      success: false,\n      registr: ''\n    };\n  },\n  methods: {\n    showPas() {\n      this.showPassword = !this.showPassword;\n      this.pasType = this.pasType === \"password\" ? \"text\" : \"password\";\n    },\n    async registrate() {\n      try {\n        const response = await axios.post('', {\n          username: this.username,\n          password: this.password,\n          fullName: this.fullname\n        });\n        console.log(response);\n        console.log(response.data);\n        if (response.data === this.data) {\n          this.success = true;\n        }\n      } catch (e) {\n        alert('Неверно ');\n      }\n    },\n    goToMenu() {\n      if (this.success == true) {\n        this.$router.push('menu');\n      }\n      console.log(1);\n    },\n    add() {\n      setTimeout(this.goToMenu, 1000);\n    },\n    FullName() {\n      this.fullname = this.surname + \" \" + this.name + \" \" + this.middleName;\n      this.names = this.fullname.split(' ', 2);\n      return this.fullname, this.names;\n    },\n    Name() {\n      this.names = this.fullname.split(' ', 2);\n      return this.names;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","data","showPassword","pasType","surname","middleName","password","username","fullname","names","success","registr","methods","showPas","registrate","response","post","fullName","console","log","e","alert","goToMenu","$router","push","add","setTimeout","FullName","split","Name"],"sources":["src/components/MyFormRegistr.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form>\n            <v-container>\n                <v-card width=\"400px\" class=\"mx-auto mt-5\">\n                    <v-card-title class=\"pb-0\">\n                        <h2>Регистрация</h2>\n                    </v-card-title>\n                    <v-card-text>\n                        <section v-on:keyup=\"FullName()\">\n                            <v-text-field placeholder=\"Surname\" \n                                name=\"surname\"\n                                v-model.trim=\"surname\"\n                                \n                            ></v-text-field>\n                            <v-text-field placeholder=\"Name\" \n                                name=\"name\"\n                                v-model.trim=\"name\"\n                            ></v-text-field>\n                            <v-text-field placeholder=\"Middle name\" \n                                name=\"Middle name\"\n                                v-model.trim=\"middleName\"\n                            ></v-text-field>\n                        </section>\n                        <v-text-field placeholder=\"Username\" \n                            name=\"username\"\n                            v-model=\"username\"                            \n                        ></v-text-field>\n                        <v-text-field  \n                            placeholder=\"Password\" \n                            :type='pasType' \n                            name=\"password\"\n                            :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                            @click:append=\"showPas\"\n                            v-model=\"password\"\n                        ></v-text-field>  \n                        {{ names[1]}} \n                        {{ success }} \n                                    \n                    </v-card-text>         \n                    <v-card-actions>\n                        <router-link class=\"btn\" :to=\"{name: 'FormEnter'}\">\n                            <v-btn color=\" light\"> Назад</v-btn>\n                        </router-link> \n                        <router-link class='btn' :to=\"this.registr\">\n                            <v-btn @mousedown=\"registrate()\" \n                                @click=\"add()\"\n                                class=\"buttn\" \n                                color=\"success\"\n                                > Зарегестрироваться</v-btn>\n                        </router-link> \n                        <router-link  :to=\"{name: 'menu'}\">\n                            <v-btn \n                                class=\"buttn\" \n                                color=\"success\"\n                                > ghbdth</v-btn>\n                        </router-link>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n    </v-app>\n</template>\n  \n<script>\n    import axios from 'axios';\n\n    export default {\n        name: 'MyFormEnter',\n    \n        props: {\n            \n        },\n    \n        data() {\n            return {\n                showPassword: false,\n                pasType: 'password',\n                name: '',\n                surname: '',\n                middleName: '',\n                password: \"\",\n                username: \"\",\n                fullname: '',\n                names: '',\n                data: 'User register success',\n                success: false,\n                registr: '',               \n            }\n        },\n        \n        methods: {\n            showPas() {\n                this.showPassword = !this.showPassword\n                this.pasType = this.pasType === \"password\" ? \"text\" : \"password\"               \n            },\n            \n            async registrate() {\n                try {\n                    const response = await axios.post('', {\n                        username: this.username,\n                        password: this.password,\n                        fullName: this.fullname,\n                    });\n                    console.log(response)\n                    console.log(response.data)            \n                    if (response.data === this.data) {\n                        this.success = true\n                    }                      \n                } \n                catch(e) {\n                    alert('Неверно ')\n                }      \n            },\n\n            goToMenu() {\n            if (this.success == true) {\n                this.$router.push('menu')   \n            }           \n            console.log(1)\n        },\n        \n        add() {\n            setTimeout(this.goToMenu, 1000)           \n        },\n\n        FullName() {\n                this.fullname = this.surname + \" \" + this.name + \" \" + this.middleName\n                this.names = this.fullname.split(' ', 2)\n                 \n                return this.fullname, this.names\n            },\n\n        Name() {\n            this.names = this.fullname.split(' ', 2)\n            return this.names\n        },\n    \n        }\n    }\n</script>\n  \n<style>\n.btn {\n    text-decoration: none\n}\n  \n  \n</style> "],"mappings":";AAiEA,OAAAA,KAAA;AAEA;EACAC,IAAA;EAEAC,KAAA,GAEA;EAEAC,KAAA;IACA;MACAC,YAAA;MACAC,OAAA;MACAJ,IAAA;MACAK,OAAA;MACAC,UAAA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,KAAA;MACAR,IAAA;MACAS,OAAA;MACAC,OAAA;IACA;EACA;EAEAC,OAAA;IACAC,QAAA;MACA,KAAAX,YAAA,SAAAA,YAAA;MACA,KAAAC,OAAA,QAAAA,OAAA;IACA;IAEA,MAAAW,WAAA;MACA;QACA,MAAAC,QAAA,SAAAjB,KAAA,CAAAkB,IAAA;UACAT,QAAA,OAAAA,QAAA;UACAD,QAAA,OAAAA,QAAA;UACAW,QAAA,OAAAT;QACA;QACAU,OAAA,CAAAC,GAAA,CAAAJ,QAAA;QACAG,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAd,IAAA;QACA,IAAAc,QAAA,CAAAd,IAAA,UAAAA,IAAA;UACA,KAAAS,OAAA;QACA;MACA,EACA,OAAAU,CAAA;QACAC,KAAA;MACA;IACA;IAEAC,SAAA;MACA,SAAAZ,OAAA;QACA,KAAAa,OAAA,CAAAC,IAAA;MACA;MACAN,OAAA,CAAAC,GAAA;IACA;IAEAM,IAAA;MACAC,UAAA,MAAAJ,QAAA;IACA;IAEAK,SAAA;MACA,KAAAnB,QAAA,QAAAJ,OAAA,cAAAL,IAAA,cAAAM,UAAA;MACA,KAAAI,KAAA,QAAAD,QAAA,CAAAoB,KAAA;MAEA,YAAApB,QAAA,OAAAC,KAAA;IACA;IAEAoB,KAAA;MACA,KAAApB,KAAA,QAAAD,QAAA,CAAAoB,KAAA;MACA,YAAAnB,KAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}