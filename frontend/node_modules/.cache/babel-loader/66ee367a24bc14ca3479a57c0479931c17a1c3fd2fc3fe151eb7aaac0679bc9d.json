{"ast":null,"code":"import { mapGetters, mapMutations } from 'vuex';\nimport MyMenu from '../components/MyMenu.vue';\nexport default {\n  name: 'MyContract',\n  components: {\n    MyMenu\n  },\n  props: {},\n  data() {\n    return {\n      search: '',\n      dialog1: false,\n      dialog2: false,\n      newContract: {\n        name: '',\n        type: '',\n        plannedStartDate: '',\n        plannedEndDate: '',\n        actualStartDate: '',\n        actualEndDate: '',\n        amount: '',\n        phases: [{}],\n        contractCounterparties: [{}]\n      },\n      allContracts: {\n        name: '',\n        type: '',\n        plannedStartDate: '',\n        plannedEndDate: '',\n        actualStartDate: '',\n        actualEndDate: '',\n        amount: '',\n        phases: [{}],\n        contractCounterparties: [{}]\n      },\n      selected: [],\n      testLocal: localStorage.tok\n    };\n  },\n  computed: {\n    ...mapGetters({\n      headers: 'contracts/headers',\n      contracts: 'contracts/contracts',\n      type: 'contracts/type',\n      stage: 'contracts/stage'\n    })\n  },\n  methods: {\n    ...mapMutations({\n      addNewContract: 'contracts/ADD_NEW_CONTRACT',\n      addAllContracts: 'contracts/ADD_ALL_CONTRACTS'\n    }),\n    sndNewContract() {\n      this.dialog1 = false;\n      const res = {};\n      for (let item in this.newContract) {\n        res[item] = this.newContract[item];\n      }\n      this.addNewContract(res);\n      for (let item in this.newContract) {\n        this.newContract[item] = '';\n      }\n      ;\n    },\n    Show(item) {\n      console.log(item.name);\n    },\n    async createNewContract() {\n      try {\n        const response = await axios.post(this.$store.state.url + '/api/menu/contracts/save', {\n          name: this.newContract.name,\n          type: \"WORKS\",\n          plannedStartDate: '2023-09-15',\n          plannedEndDate: '2023-09-30',\n          actualStartDate: '2023-05-01',\n          actualEndDate: '2023-07-15',\n          amount: 5000.0,\n          phases: [{\n            name: \"Phase 1\",\n            plannedStartDate: \"2023-09-15\",\n            plannedEndDate: \"2023-09-30\",\n            actualStartDate: \"2023-05-01\",\n            actualEndDate: \"2023-07-15\",\n            phaseCost: 100000.00,\n            actualMaterialCosts: 25000.00,\n            plannedMaterialCosts: 20000.00,\n            actualSalaryExpenses: 55000.00,\n            plannedSalaryExpenses: 50000.00\n          }],\n          contractCounterparties: [{\n            name: \"Contract 1\",\n            type: \"PROCUREMENT\",\n            counterparty: {\n              name: \"Counterparty 5\",\n              address: \"123 Main St\",\n              inn: \"555-5555\"\n            },\n            amount: 100000.0,\n            plannedStartDate: \"2023-04-01\",\n            plannedEndDate: \"2023-05-31\",\n            actualStartDate: \"2023-05-01\",\n            actualEndDate: \"2023-07-15\"\n          }]\n        }, {\n          headers: {\n            \"Authorization\": \"Bearer \" + \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbm5ubmEifQ.8uH8-TkwiqueuYwOaA7VpFpjQZyvXZbgJWyBc99tN2E\"\n          }\n        });\n        console.log(response);\n      } catch (e) {\n        alert('Неверно');\n      }\n    },\n    async getContractt() {\n      try {\n        const response = await axios.get(this.$store.state.url + '/api/menu/contracts/show', {\n          headers: {\n            \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbm5ubmEifQ.8uH8-TkwiqueuYwOaA7VpFpjQZyvXZbgJWyBc99tN2E\"\n          }\n        });\n        console.log(response);\n        for (let i = 0; i < response.data.length; i++) {\n          console.log(i);\n          this.addAllContracts(response.data[i]);\n          console.log(response.data[i]);\n        }\n      } catch (e) {\n        alert('Error is true');\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapMutations","MyMenu","name","components","props","data","search","dialog1","dialog2","newContract","type","plannedStartDate","plannedEndDate","actualStartDate","actualEndDate","amount","phases","contractCounterparties","allContracts","selected","testLocal","localStorage","tok","computed","headers","contracts","stage","methods","addNewContract","addAllContracts","sndNewContract","res","item","Show","console","log","createNewContract","response","axios","post","$store","state","url","phaseCost","actualMaterialCosts","plannedMaterialCosts","actualSalaryExpenses","plannedSalaryExpenses","counterparty","address","inn","e","alert","getContractt","get","i","length"],"sources":["src/components/MyContract.vue"],"sourcesContent":["<template class=\"main\">\n    <v-app>   \n        <section >\n        <my-menu></my-menu>\n        </section>\n        <section class=\"content\" >\n        <h1>Контракты</h1>\n        <v-divider></v-divider>\n            <v-container>\n                <v-row>\n                    <v-dialog \n                        v-model=\"dialog1\"\n                        persistent\n                        max-width=\"600px\">\n                        <template v-slot:activator=\"{ on, attrs }\"> \n                            <v-btn \n                                outlined  \n                                icon color=\"blue\" \n                                v-bind=\"attrs\" \n                                v-on=\"on\">\n                                    <v-icon >mdi-plus</v-icon>\n                            </v-btn>\n                        </template>\n                        <v-card>\n                            <v-card-title>\n                                <span class=\"text-h5\"\n                                >Добавить новый контракт\n                                </span>\n                            </v-card-title>\n                            <v-card-text>\n                                <v-text-field \n                                    label=\"Название\"\n                                    v-model= 'newContract.name'>\n                                </v-text-field>\n                                <v-select\n                                    :items=\"type\" \n                                    :menu-props=\"{ top: true, offsetY: true }\"\n                                    label=\"Тип\"\n                                    v-model= \"newContract.type\">\n                                </v-select>\n                                <label>Плановая дата начала\n                                    <v-text-field                                \n                                        type=\"Date\"\n                                        v-model=\"newContract.plannedStartDate\">\n                                    </v-text-field>\n                                </label>\n                                <hr>\n                                <label>Плановая дата окончания\n                                    <v-text-field                                 \n                                        type=\"Date\"\n                                        v-model=\"newContract.plannedEndDate\">\n                                    </v-text-field>\n                                </label>\n                                <hr>\n                                <label>Фактическая дата начала\n                                    <v-text-field                                 \n                                        type=\"Date\"\n                                        v-model=\"newContract.actualStartDate\">\n                                    </v-text-field>\n                                </label>\n                                <hr>\n                                <label>Фактическая дата окончания\n                                    <v-text-field                                 \n                                        type=\"Date\"\n                                        v-model=\"newContract.actualEndDate\">\n                                    </v-text-field>\n                                </label> \n                                <v-text-field \n                                    label=\"Сумма договора\"\n                                    v-model=\"newContract.amount\">\n                                </v-text-field>\n                                <v-divider></v-divider>\n                                <section\n                                    \n                                    \n                                    > \n                                </section>\n                                <section> Организация Контрагент\n                                    <v-row> \n                                        <v-col><v-text-field  label=\"name\"></v-text-field></v-col>\n                                        <v-col><v-text-field  label=\"address\"></v-text-field></v-col>\n                                        <v-col><v-text-field  label=\"inn\"></v-text-field></v-col>\n                                    </v-row>\n                                    <v-btn outlined  icon color=\"blue\"> \n                                        <v-icon >mdi-plus</v-icon>\n                                    </v-btn>\n                                </section>\n                            </v-card-text>\n                            <v-card-actions>\n                                <v-spacer></v-spacer>\n                                <v-btn\n                                    color=\"blue darken-1\"\n                                    text\n                                    @click=\"dialog2 = true\"\n                                    >Закрыть\n                                </v-btn>\n                                <v-row>\n                                    <v-dialog width=\"600px\" justify-center\n                                        v-model=\"dialog2\"\n                                        >\n                                        <v-card>\n                                            <v-card-title>\n                                                <div>Вы уверены, что хотите закрыть окно?</div>\n                                                <div>Все несохраненные данные будут утеряны</div>\n                                            </v-card-title>\n                                            <v-card-actions>\n                                                <v-spacer></v-spacer>\n                                                    <v-btn color=\"blue darken-1\"\n                                                        text\n                                                        @click=\"dialog1 = false\"\n                                                        >Закрыть\n                                                    </v-btn>\n                                                    <v-btn color=\"blue darken-1\"\n                                                        text\n                                                        @click=\"dialog2 = false\"\n                                                        >Остаться\n                                                    </v-btn>\n                                            </v-card-actions>\n                                        </v-card>\n                                    </v-dialog>\n                                </v-row>\n                                {{ this.newContract.name }}\n                                <v-btn\n                                    color=\"blue darken-1\"\n                                    text                                \n                                    @click=\"createNewContract(), sndNewContract(),  getContractt()\"\n                                    >Сохранить\n                                </v-btn>\n                            </v-card-actions>\n                        </v-card>\n                    </v-dialog>               \n                    <template>\n                        <v-btn class=\"btn\"\n                            outlined  \n                            icon color=\"blue\" \n                            >\n                                <v-icon >mdi-magnify</v-icon>\n                        </v-btn>\n                    </template>               \n                </v-row>\n            </v-container>        \n            <v-divider></v-divider>\n            <v-container>\n                <v-simple-table height=\"700px\" class=\"table\" >\n                    <template  v-slot:default>\n                        <thead>\n                            <th v-for=\"item in headers\" :key=\"item.text\">\n                                {{ item.text }}\n                            </th>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"(item, name, index) in contracts\"\n                                :key=\"item.idndex\"\n                                @click=\"Show(item)\"\n                                >\n                                <td>{{ item.name}}</td>\n                                <td>{{ item.type }}</td>\n                                <td>{{ item.plannedStartDate }}</td>\n                                <td>{{ item.plannedEndDate }}</td>\n                                <td>{{ item.actualStartDate }}</td>\n                                <td>{{ item.actualEndDate }}</td>\n                                <td>{{ item.amount }}</td>\n                                <td>{{ item.phases.length }}</td>\n                                <td>{{ item.contractCounterparties }}</td>\n                                <td>\n                                    <router-link class=\"btn\" :to=\"{name:'contractPage', params: {name: `${item.name}`}}\">\n                                        <v-btn outlined small depressed>\n                                            Открыть\n                                        </v-btn>\n                                    </router-link>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </template>\n                </v-simple-table>           \n            </v-container>\n        </section>\n        {{ $store.state.token }}\n        <span>   \n            <router-link class=\"btn\" :to=\"{name: 'menu'}\">\n                <v-btn color=\" light\"> Назад в меню </v-btn>\n            </router-link> \n        </span>       \n        <span>\n            <v-btn\n            @click=\"getContractt()\">\n            download</v-btn>\n        </span>  \n        {{ testLocal }}\n    </v-app>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex';\nimport MyMenu from '../components/MyMenu.vue';\nexport default {\n    name: 'MyContract',\n    components: {\n        MyMenu,\n    },\n\n    props: {\n        \n    },\n\n    data() { \n        return {\n            search: '',\n            dialog1: false,\n            dialog2: false,\n            newContract:\n                {\n                    name: '',\n                    type: '',\n                    plannedStartDate: '',\n                    plannedEndDate: '',\n                    actualStartDate: '',\n                    actualEndDate: '',\n                    amount: '',\n                    phases: [{ }],\n                    contractCounterparties: [{ }]\n                },\n            allContracts:\n                {\n                    name: '',\n                    type: '',\n                    plannedStartDate: '',\n                    plannedEndDate: '',\n                    actualStartDate: '',\n                    actualEndDate: '',\n                    amount: '',\n                    phases: [{ }],\n                    contractCounterparties: [{ }],\n                    },\n            selected: [],\n            testLocal: localStorage.tok,\n        }\n    },\n    computed:{\n        ...mapGetters({\n            headers: 'contracts/headers',           \n            contracts: 'contracts/contracts',\n            type: 'contracts/type',\n            stage: 'contracts/stage'\n        }),\n        \n    },\n\n    methods: {\n        ...mapMutations({\n            addNewContract: 'contracts/ADD_NEW_CONTRACT',\n            addAllContracts: 'contracts/ADD_ALL_CONTRACTS'\n        }),\n        sndNewContract() {\n            this.dialog1 = false;\n            const res = {};\n            for (let item in this.newContract) {\n               res[item] = this.newContract[item];\n            }\n            this.addNewContract(res);\n            for (let item in this.newContract) {\n               this.newContract[item] = '';\n            };\n               \n        },\n        Show(item) {\n            console.log(item.name)\n        },\n\n        async createNewContract() {\n            try {\n                const response = await axios.post(this.$store.state.url + '/api/menu/contracts/save',\n                {\n                    name: this.newContract.name,\n                    type: \"WORKS\",\n                    plannedStartDate: '2023-09-15',\n                    plannedEndDate: '2023-09-30',\n                    actualStartDate: '2023-05-01',\n                    actualEndDate: '2023-07-15',\n                    amount: 5000.0,\n                    phases: [\n                        {\n                            name: \"Phase 1\",\n                            plannedStartDate: \"2023-09-15\",\n                            plannedEndDate: \"2023-09-30\",\n                            actualStartDate: \"2023-05-01\",\n                            actualEndDate: \"2023-07-15\",\n                            phaseCost: 100000.00,\n                            actualMaterialCosts: 25000.00,\n                            plannedMaterialCosts: 20000.00,\n                            actualSalaryExpenses: 55000.00,\n                            plannedSalaryExpenses: 50000.00\n                        }\n                    ],\n                                    contractCounterparties: [\n                        {\n                            name: \"Contract 1\",\n                            type: \"PROCUREMENT\",\n                            counterparty: {\n                                name: \"Counterparty 5\",\n                                address: \"123 Main St\",\n                                inn: \"555-5555\"\n                            },\n                            amount: 100000.0,\n                            plannedStartDate: \"2023-04-01\",\n                            plannedEndDate: \"2023-05-31\",\n                            actualStartDate: \"2023-05-01\",\n                            actualEndDate: \"2023-07-15\"\n                        }\n                    ],\n                },\n                {headers: {\n                    \"Authorization\":  \"Bearer \" + \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbm5ubmEifQ.8uH8-TkwiqueuYwOaA7VpFpjQZyvXZbgJWyBc99tN2E\",\n                }});\n                console.log(response)\n                \n            } \n            catch(e) {\n                alert('Неверно')\n                }\n\n        },\n\n        async getContractt() {\n            try {\n                const response = await axios.get(this.$store.state.url + '/api/menu/contracts/show', \n                {headers: {\n                    \"Authorization\":  \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbm5ubmEifQ.8uH8-TkwiqueuYwOaA7VpFpjQZyvXZbgJWyBc99tN2E\",               \n                }})\n                console.log(response)\n                for (let i = 0; i<response.data.length; i++)  {\n                    console.log(i);\n                    this.addAllContracts(response.data[i])\n                    console.log(response.data[i]);                   \n                }                         \n            } \n            catch(e) {\n                alert('Error is true')\n            }      \n        },\n\n        \n\n        \n    },\n}\n\n</script>\n\n<style scoped>\n\n.main {\n    max-height: 400px;  \n    max-width: 250px; \n}\n.content {\n    padding-left: 280px;\n    padding-top: 20px;\n    position: fixed;\n}\n.btn {\n    margin-left:20px\n}\n.table {\n    border: 1px solid black;\n}\nth {\n    width: 250px;\n}\n</style>\n\n"],"mappings":"AAiMA,SAAAA,UAAA,EAAAC,YAAA;AACA,OAAAC,MAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EAEAG,KAAA,GAEA;EAEAC,KAAA;IACA;MACAC,MAAA;MACAC,OAAA;MACAC,OAAA;MACAC,WAAA,EACA;QACAP,IAAA;QACAQ,IAAA;QACAC,gBAAA;QACAC,cAAA;QACAC,eAAA;QACAC,aAAA;QACAC,MAAA;QACAC,MAAA;QACAC,sBAAA;MACA;MACAC,YAAA,EACA;QACAhB,IAAA;QACAQ,IAAA;QACAC,gBAAA;QACAC,cAAA;QACAC,eAAA;QACAC,aAAA;QACAC,MAAA;QACAC,MAAA;QACAC,sBAAA;MACA;MACAE,QAAA;MACAC,SAAA,EAAAC,YAAA,CAAAC;IACA;EACA;EACAC,QAAA;IACA,GAAAxB,UAAA;MACAyB,OAAA;MACAC,SAAA;MACAf,IAAA;MACAgB,KAAA;IACA;EAEA;EAEAC,OAAA;IACA,GAAA3B,YAAA;MACA4B,cAAA;MACAC,eAAA;IACA;IACAC,eAAA;MACA,KAAAvB,OAAA;MACA,MAAAwB,GAAA;MACA,SAAAC,IAAA,SAAAvB,WAAA;QACAsB,GAAA,CAAAC,IAAA,SAAAvB,WAAA,CAAAuB,IAAA;MACA;MACA,KAAAJ,cAAA,CAAAG,GAAA;MACA,SAAAC,IAAA,SAAAvB,WAAA;QACA,KAAAA,WAAA,CAAAuB,IAAA;MACA;MAAA;IAEA;IACAC,KAAAD,IAAA;MACAE,OAAA,CAAAC,GAAA,CAAAH,IAAA,CAAA9B,IAAA;IACA;IAEA,MAAAkC,kBAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA,CAAAC,IAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAC,GAAA,+BACA;UACAxC,IAAA,OAAAO,WAAA,CAAAP,IAAA;UACAQ,IAAA;UACAC,gBAAA;UACAC,cAAA;UACAC,eAAA;UACAC,aAAA;UACAC,MAAA;UACAC,MAAA,GACA;YACAd,IAAA;YACAS,gBAAA;YACAC,cAAA;YACAC,eAAA;YACAC,aAAA;YACA6B,SAAA;YACAC,mBAAA;YACAC,oBAAA;YACAC,oBAAA;YACAC,qBAAA;UACA,EACA;UACA9B,sBAAA,GACA;YACAf,IAAA;YACAQ,IAAA;YACAsC,YAAA;cACA9C,IAAA;cACA+C,OAAA;cACAC,GAAA;YACA;YACAnC,MAAA;YACAJ,gBAAA;YACAC,cAAA;YACAC,eAAA;YACAC,aAAA;UACA;QAEA,GACA;UAAAU,OAAA;YACA;UACA;QAAA;QACAU,OAAA,CAAAC,GAAA,CAAAE,QAAA;MAEA,EACA,OAAAc,CAAA;QACAC,KAAA;MACA;IAEA;IAEA,MAAAC,aAAA;MACA;QACA,MAAAhB,QAAA,SAAAC,KAAA,CAAAgB,GAAA,MAAAd,MAAA,CAAAC,KAAA,CAAAC,GAAA,+BACA;UAAAlB,OAAA;YACA;UACA;QAAA;QACAU,OAAA,CAAAC,GAAA,CAAAE,QAAA;QACA,SAAAkB,CAAA,MAAAA,CAAA,GAAAlB,QAAA,CAAAhC,IAAA,CAAAmD,MAAA,EAAAD,CAAA;UACArB,OAAA,CAAAC,GAAA,CAAAoB,CAAA;UACA,KAAA1B,eAAA,CAAAQ,QAAA,CAAAhC,IAAA,CAAAkD,CAAA;UACArB,OAAA,CAAAC,GAAA,CAAAE,QAAA,CAAAhC,IAAA,CAAAkD,CAAA;QACA;MACA,EACA,OAAAJ,CAAA;QACAC,KAAA;MACA;IACA;EAKA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}