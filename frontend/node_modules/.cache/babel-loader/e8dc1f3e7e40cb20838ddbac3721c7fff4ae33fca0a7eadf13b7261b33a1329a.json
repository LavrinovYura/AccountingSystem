{"ast":null,"code":"import { mapGetters, mapMutations } from 'vuex';\nexport default {\n  name: 'MyCreateContract',\n  props: ['EditContract'],\n  data() {\n    return {\n      newContract: {\n        name: '',\n        type: '',\n        plannedStartDate: '',\n        plannedEndDate: '',\n        actualStartDate: '',\n        actualEndDate: '',\n        amount: '',\n        phases: [{\n          name: '',\n          amount: '',\n          planAmount: '',\n          factAmount: '',\n          plannedStartDate: '',\n          plannedEndDate: '',\n          actualStartDate: '',\n          actualEndDate: ''\n        }],\n        contractCounterparties: [{\n          name: '',\n          amount: '',\n          organization: '',\n          type: '',\n          plannedStartDate: '',\n          plannedEndDate: '',\n          actualStartDate: '',\n          actualEndDate: ''\n        }]\n      },\n      dialog2: false\n    };\n  },\n  methods: {\n    ...mapMutations({\n      addNewContract: 'ADD_NEW_CONTRACT',\n      addAllContracts: 'ADD_ALL_CONTRACTS',\n      closeDialog: 'CLOSE_DIALOG'\n    }),\n    sndNewContract() {\n      const res = {};\n      for (let item in this.newContract) {\n        res[item] = this.newContract[item];\n      }\n      this.addNewContract(res);\n      for (let item in this.newContract) {\n        this.newContract[item] = '';\n      }\n      ;\n    },\n    async createNewContract() {\n      try {\n        const response = await axios.post(this.$store.state.url + '/api/menu/contracts/save', {\n          name: this.newContract.name,\n          type: \"WORKS\",\n          plannedStartDate: '2023-09-15',\n          plannedEndDate: '2023-09-30',\n          actualStartDate: '2023-05-01',\n          actualEndDate: '2023-07-15',\n          amount: 5000.0,\n          phases: [{\n            name: \"Phase 1\",\n            plannedStartDate: \"2023-09-15\",\n            plannedEndDate: \"2023-09-30\",\n            actualStartDate: \"2023-05-01\",\n            actualEndDate: \"2023-07-15\",\n            phaseCost: 100000.00,\n            actualMaterialCosts: 25000.00,\n            plannedMaterialCosts: 20000.00,\n            actualSalaryExpenses: 55000.00,\n            plannedSalaryExpenses: 50000.00\n          }],\n          contractCounterparties: [{\n            name: \"Contract 1\",\n            type: \"PROCUREMENT\",\n            counterparty: {\n              name: \"Counterparty 5\",\n              address: \"123 Main St\",\n              inn: \"555-5555\"\n            },\n            amount: 100000.0,\n            plannedStartDate: \"2023-04-01\",\n            plannedEndDate: \"2023-05-31\",\n            actualStartDate: \"2023-05-01\",\n            actualEndDate: \"2023-07-15\"\n          }]\n        }, {\n          headers: {\n            \"Authorization\": \"Bearer \" + \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbm5ubmEifQ.8uH8-TkwiqueuYwOaA7VpFpjQZyvXZbgJWyBc99tN2E\"\n          }\n        });\n        console.log(response);\n      } catch (e) {\n        alert('Неверно');\n      }\n    },\n    async getContractt() {\n      try {\n        const response = await axios.get(this.$store.state.url + '/api/menu/contracts/show', {\n          headers: {\n            \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbm5ubmEifQ.8uH8-TkwiqueuYwOaA7VpFpjQZyvXZbgJWyBc99tN2E\"\n          }\n        });\n        console.log(response);\n        for (let i = 0; i < response.data.length; i++) {\n          console.log(i);\n          this.addAllContracts(response.data[i]);\n          console.log(response.data[i]);\n        }\n      } catch (e) {\n        alert('Error is true');\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      headers: 'contractsModul/headers',\n      contracts: 'contracts',\n      type: 'contractsModul/type',\n      dialog1: 'index/dialog1'\n    })\n  }\n};","map":{"version":3,"names":["mapGetters","mapMutations","name","props","data","newContract","type","plannedStartDate","plannedEndDate","actualStartDate","actualEndDate","amount","phases","planAmount","factAmount","contractCounterparties","organization","dialog2","methods","addNewContract","addAllContracts","closeDialog","sndNewContract","res","item","createNewContract","response","axios","post","$store","state","url","phaseCost","actualMaterialCosts","plannedMaterialCosts","actualSalaryExpenses","plannedSalaryExpenses","counterparty","address","inn","headers","console","log","e","alert","getContractt","get","i","length","computed","contracts","dialog1"],"sources":["src/components/MyEditContract.vue"],"sourcesContent":["<template>\n    <v-app class=\"main\">\n        <v-card class=\"card\">\n                <v-card-title>\n                    <span class=\"text-h5\"\n                    > Редактировать контракт\n                    {{ EditContract }}\n                    </span>\n                </v-card-title>\n                <v-card-text>\n \n                    <v-divider></v-divider>\n                    <template>\n                        <v-row>\n                            <v-col v-for=\"(field, index) in fields\" :key=\"index\" cols=\"3\">\n                                <label> {{ field.label }}</label>\n                                    <template v-if=\"field.type === 'select'\">\n                                        <v-select clearable :items=\"type\" v-model=\"newContract[field.model]\"></v-select>\n                                    </template>\n                                \n                                <template v-else>\n                                    <v-text-field :type=\"field.type\" v-model=\"newContract[field.model]\" ></v-text-field>\n                                </template>\n                            </v-col>\n                        </v-row>\n                        </template>\n\n                    <v-divider></v-divider>\n                    <section > \n                        <h4>Этапы</h4>\n                        <v-row  v-for=\"(phase, index) in newContract.phases\" :key=\" phase.id\"> \n                            <v-divider></v-divider>\n                            <h6>Этап {{ index+1 }}</h6>\n                            <v-col v-for=\"name in textPhases\" cols=\"3\">\n                                <label>{{ name.name1 }}\n                                    <v-text-field :type=\"name.type1\" v-model=\"phase[name.model1]\">\n                                    </v-text-field>\n                                </label>\n                            </v-col>\n                        </v-row>\n                        <v-btn outlined  icon color=\"blue\" @click=\"addPhase\"> \n                            <v-icon >mdi-plus</v-icon>\n                        </v-btn>\n                    </section>\n                    <v-divider></v-divider>\n                    \n                    <section>\n                        <h4>Договор с контрагентом</h4>\n                        <v-divider></v-divider>\n\n                        <v-row v-for=\"(agent, id) in newContract.contractCounterparties\" :key=\"agent.id\">\n                            <h6>Контрагент {{ id+1 }}</h6>\n                            <v-col v-for=\"(name, index) in textPhases\" cols=\"3\">\n                                <label>{{ name.name2 }}</label>\n                                <template v-if=\"name.model2 === 'type'\">\n                                    <v-select \n                                    clearable :items=\"type\" \n                                    \n                                    v-model=\"agent[name.model2]\"></v-select>\n                                    \n                                </template>\n                                <template v-else-if=\"name.model2==='organization'\">\n                                    <v-autocomplete \n                                        \n                                        @input='filterAgents'\n                                        :items=\"filteredWords\"\n                                        hide-no-data\n                                        claerable\n                                        v-model.lazy=\"agent[name.model2]\"\n                                    ></v-autocomplete>\n\n                                </template>\n                                <template v-else>\n                                    <v-text-field :type=\"name.type1\" v-model=\"agent[name.model2]\"></v-text-field>\n                                </template>\n                            </v-col>\n                            \n                        </v-row>\n                        \n                        <v-btn outlined  icon color=\"blue\" @click=\"addContragent\"> \n                            <v-icon >mdi-plus</v-icon>\n                        </v-btn>\n                        <v-divider></v-divider>\n                    </section>\n                    {{ newContract.contractCounterparties }}\n                    </v-card-text>\n                \n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn\n                        color=\"blue darken-1\"\n                        text\n                        @click=\"dialog2 = true\"\n                        >Закрыть\n                    </v-btn>\n                    <v-row>\n                        <v-dialog width=\"600px\" justify-center\n                            v-model=\"dialog2\"\n                            >\n                            <v-card>\n                                <v-card-title>\n                                    <div>Вы уверены, что хотите закрыть окно?</div>\n                                    <div>Все несохраненные данные будут утеряны</div>\n                                </v-card-title>\n                                <v-card-actions>\n                                    <v-spacer></v-spacer>\n                                        <v-btn color=\"blue darken-1\"\n                                            text\n                                            @click=\"closeDialog()\"\n                                            >Закрыть\n                                        </v-btn>\n                                        <v-btn color=\"blue darken-1\"\n                                            text\n                                            @click=\"dialog2 = false\"\n                                            >Остаться\n                                        </v-btn>\n                                </v-card-actions>\n                            </v-card>\n                        </v-dialog>\n                    </v-row>\n                    {{ newContract.name }} {{ newContract.phases.name}}\n                    <v-btn\n                        color=\"blue darken-1\"\n                        text                                \n                        @click=\" sndNewContract(), closeDialog()\"\n                        >Сохранить\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n            \n    </v-app>\n</template>\n<script>\nimport { mapGetters, mapMutations } from 'vuex';\nexport default {\n    name: 'MyCreateContract',\n    props: ['EditContract'],\n    data() {\n        return {\n            newContract:\n                {\n                    name: '',\n                    type: '',\n                    plannedStartDate: '',\n                    plannedEndDate: '',\n                    actualStartDate: '',\n                    actualEndDate: '',\n                    amount: '',\n                    phases: [{ \n                        name: '',\n                        amount: '',\n                        planAmount: '',\n                        factAmount: '',\n                        plannedStartDate: '',\n                        plannedEndDate: '',\n                        actualStartDate: '',\n                        actualEndDate: '',\n                    }],\n                    contractCounterparties: [{ \n                        name: '',\n                        amount: '',\n                        organization: '',\n                        type: '',\n                        plannedStartDate: '',\n                        plannedEndDate: '',\n                        actualStartDate: '',\n                        actualEndDate: '',\n                    }]\n                },\n            \n            dialog2: false,\n            \n        }\n    },\n    methods: {\n        ...mapMutations({\n            addNewContract: 'ADD_NEW_CONTRACT',\n            addAllContracts: 'ADD_ALL_CONTRACTS',\n            closeDialog: 'CLOSE_DIALOG'\n        }),\n        sndNewContract() {\n            \n            const res = {};\n            for (let item in this.newContract) {\n               res[item] = this.newContract[item];\n            }\n            this.addNewContract(res);\n            for (let item in this.newContract) {\n               this.newContract[item] = '';\n            };\n            \n        },\n        async createNewContract() {\n            try {\n                const response = await axios.post(this.$store.state.url + '/api/menu/contracts/save',\n                {\n                    name: this.newContract.name,\n                    type: \"WORKS\",\n                    plannedStartDate: '2023-09-15',\n                    plannedEndDate: '2023-09-30',\n                    actualStartDate: '2023-05-01',\n                    actualEndDate: '2023-07-15',\n                    amount: 5000.0,\n                    phases: [\n                        {\n                            name: \"Phase 1\",\n                            plannedStartDate: \"2023-09-15\",\n                            plannedEndDate: \"2023-09-30\",\n                            actualStartDate: \"2023-05-01\",\n                            actualEndDate: \"2023-07-15\",\n                            phaseCost: 100000.00,\n                            actualMaterialCosts: 25000.00,\n                            plannedMaterialCosts: 20000.00,\n                            actualSalaryExpenses: 55000.00,\n                            plannedSalaryExpenses: 50000.00\n                        }\n                    ],\n                    contractCounterparties: [\n                        {\n                            name: \"Contract 1\",\n                            type: \"PROCUREMENT\",\n                            counterparty: {\n                                name: \"Counterparty 5\",\n                                address: \"123 Main St\",\n                                inn: \"555-5555\"\n                            },\n                            amount: 100000.0,\n                            plannedStartDate: \"2023-04-01\",\n                            plannedEndDate: \"2023-05-31\",\n                            actualStartDate: \"2023-05-01\",\n                            actualEndDate: \"2023-07-15\"\n                        }\n                    ],\n                },\n                {headers: {\n                    \"Authorization\":  \"Bearer \" + \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbm5ubmEifQ.8uH8-TkwiqueuYwOaA7VpFpjQZyvXZbgJWyBc99tN2E\",\n                }});\n                console.log(response)\n                \n            } \n            catch(e) {\n                alert('Неверно')\n                }\n\n        },\n        async getContractt() {\n            try {\n                const response = await axios.get(this.$store.state.url + '/api/menu/contracts/show', \n                {headers: {\n                    \"Authorization\":  \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbm5ubmEifQ.8uH8-TkwiqueuYwOaA7VpFpjQZyvXZbgJWyBc99tN2E\",               \n                }})\n                console.log(response)\n                for (let i = 0; i<response.data.length; i++)  {\n                    console.log(i);\n                    this.addAllContracts(response.data[i])\n                    console.log(response.data[i]);                   \n                }                         \n            } \n            catch(e) {\n                alert('Error is true')\n            }      \n        },\n    },\n    computed:{\n        ...mapGetters({\n            headers: 'contractsModul/headers',           \n            contracts: 'contracts',\n            type: 'contractsModul/type',\n            dialog1: 'index/dialog1'\n        }),\n        \n    },\n}\n\n\n</script>\n\n<style scoped>\n.card {\n    width: 100%;\n}\n\n\n\n</style>"],"mappings":"AAqIA,SAAAA,UAAA,EAAAC,YAAA;AACA;EACAC,IAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,WAAA,EACA;QACAH,IAAA;QACAI,IAAA;QACAC,gBAAA;QACAC,cAAA;QACAC,eAAA;QACAC,aAAA;QACAC,MAAA;QACAC,MAAA;UACAV,IAAA;UACAS,MAAA;UACAE,UAAA;UACAC,UAAA;UACAP,gBAAA;UACAC,cAAA;UACAC,eAAA;UACAC,aAAA;QACA;QACAK,sBAAA;UACAb,IAAA;UACAS,MAAA;UACAK,YAAA;UACAV,IAAA;UACAC,gBAAA;UACAC,cAAA;UACAC,eAAA;UACAC,aAAA;QACA;MACA;MAEAO,OAAA;IAEA;EACA;EACAC,OAAA;IACA,GAAAjB,YAAA;MACAkB,cAAA;MACAC,eAAA;MACAC,WAAA;IACA;IACAC,eAAA;MAEA,MAAAC,GAAA;MACA,SAAAC,IAAA,SAAAnB,WAAA;QACAkB,GAAA,CAAAC,IAAA,SAAAnB,WAAA,CAAAmB,IAAA;MACA;MACA,KAAAL,cAAA,CAAAI,GAAA;MACA,SAAAC,IAAA,SAAAnB,WAAA;QACA,KAAAA,WAAA,CAAAmB,IAAA;MACA;MAAA;IAEA;IACA,MAAAC,kBAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA,CAAAC,IAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAC,GAAA,+BACA;UACA7B,IAAA,OAAAG,WAAA,CAAAH,IAAA;UACAI,IAAA;UACAC,gBAAA;UACAC,cAAA;UACAC,eAAA;UACAC,aAAA;UACAC,MAAA;UACAC,MAAA,GACA;YACAV,IAAA;YACAK,gBAAA;YACAC,cAAA;YACAC,eAAA;YACAC,aAAA;YACAsB,SAAA;YACAC,mBAAA;YACAC,oBAAA;YACAC,oBAAA;YACAC,qBAAA;UACA,EACA;UACArB,sBAAA,GACA;YACAb,IAAA;YACAI,IAAA;YACA+B,YAAA;cACAnC,IAAA;cACAoC,OAAA;cACAC,GAAA;YACA;YACA5B,MAAA;YACAJ,gBAAA;YACAC,cAAA;YACAC,eAAA;YACAC,aAAA;UACA;QAEA,GACA;UAAA8B,OAAA;YACA;UACA;QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAhB,QAAA;MAEA,EACA,OAAAiB,CAAA;QACAC,KAAA;MACA;IAEA;IACA,MAAAC,aAAA;MACA;QACA,MAAAnB,QAAA,SAAAC,KAAA,CAAAmB,GAAA,MAAAjB,MAAA,CAAAC,KAAA,CAAAC,GAAA,+BACA;UAAAS,OAAA;YACA;UACA;QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAhB,QAAA;QACA,SAAAqB,CAAA,MAAAA,CAAA,GAAArB,QAAA,CAAAtB,IAAA,CAAA4C,MAAA,EAAAD,CAAA;UACAN,OAAA,CAAAC,GAAA,CAAAK,CAAA;UACA,KAAA3B,eAAA,CAAAM,QAAA,CAAAtB,IAAA,CAAA2C,CAAA;UACAN,OAAA,CAAAC,GAAA,CAAAhB,QAAA,CAAAtB,IAAA,CAAA2C,CAAA;QACA;MACA,EACA,OAAAJ,CAAA;QACAC,KAAA;MACA;IACA;EACA;EACAK,QAAA;IACA,GAAAjD,UAAA;MACAwC,OAAA;MACAU,SAAA;MACA5C,IAAA;MACA6C,OAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}