{"ast":null,"code":"import { mapGetters, mapMutations, mapActions } from 'vuex';\nimport MyMenu from '../components/MyMenu.vue';\nimport MyCreateContract from '../components/MyCreateContract.vue';\nexport default {\n  name: 'MyContract',\n  components: {\n    MyMenu,\n    MyCreateContract\n  },\n  data() {\n    return {\n      setActive: '',\n      forSearch: {\n        name: '',\n        type: '',\n        plannedStartDate: '',\n        plannedEndDate: '',\n        actualStartDate: '',\n        actualEndDate: '',\n        amount: ''\n      },\n      dialog2: false,\n      search: false,\n      fields: [{\n        name: 'Название',\n        model: 'name',\n        type: ''\n      }, {\n        name: 'Тип',\n        model: 'type',\n        type: 'select'\n      }, {\n        name: 'Плановая Дата Начала',\n        model: 'plannedStartDate',\n        type: 'date'\n      }, {\n        name: 'Плановая дата окончания',\n        model: 'plannedEndDate',\n        type: 'date'\n      }, {\n        name: 'Фактическая дата начала',\n        model: 'actualSartDate',\n        type: 'date'\n      }, {\n        name: 'Фактическая дата окончания',\n        model: 'actualEndDate',\n        type: 'date'\n      }, {\n        name: 'Сумма',\n        model: 'amount',\n        type: ''\n      }],\n      newContract: {\n        name: '',\n        type: '',\n        plannedStartDate: '',\n        plannedEndDate: '',\n        actualStartDate: '',\n        actualEndDate: '',\n        amount: '',\n        phases: [{\n          name: '',\n          amount: '',\n          planAmount: '',\n          factAmount: '',\n          plannedStartDate: '',\n          plannedEndDate: '',\n          actualStartDate: '',\n          actualEndDate: ''\n        }],\n        contractCounterparties: [{\n          name: '',\n          amount: '',\n          organization: '',\n          type: '',\n          plannedStartDate: '',\n          plannedEndDate: '',\n          actualStartDate: '',\n          actualEndDate: ''\n        }]\n      },\n      testLocal: localStorage.tok\n    };\n  },\n  computed: {\n    ...mapGetters({\n      headers: 'contractsModul/headers',\n      contracts: 'contracts',\n      type: 'contractsModul/type'\n    })\n  },\n  methods: {\n    ...mapMutations({\n      addNewContract: 'ADD_NEW_CONTRACT',\n      addAllContracts: 'ADD_ALL_CONTRACTS'\n    }),\n    sndNewContract() {\n      this.dialog1 = false;\n      const res = {};\n      for (let item in this.newContract) {\n        res[item] = this.newContract[item];\n      }\n      this.addNewContract(res);\n      for (let item in this.newContract) {\n        this.newContract[item] = '';\n      }\n      ;\n    },\n    Show(item) {\n      console.log(item.name);\n    },\n    async getContractt() {\n      try {\n        const Body = {};\n        const response = await axios.post(this.$store.state.url + '/api/menu/contracts/show', Body, {\n          headers: {\n            \"Authorization\": \"Bearer \" + localStorage.token\n          }\n        });\n        console.log(response);\n        for (let i = 0; i < response.data.length; i++) {\n          console.log(i);\n          this.addAllContracts(response.data[i]);\n          console.log(response.data[i]);\n        }\n      } catch (e) {\n        alert('Error is true');\n      }\n    }\n  },\n  activated() {\n    this.getContractt();\n  }\n};","map":{"version":3,"names":["mapGetters","mapMutations","mapActions","MyMenu","MyCreateContract","name","components","data","setActive","forSearch","type","plannedStartDate","plannedEndDate","actualStartDate","actualEndDate","amount","dialog2","search","fields","model","newContract","phases","planAmount","factAmount","contractCounterparties","organization","testLocal","localStorage","tok","computed","headers","contracts","methods","addNewContract","addAllContracts","sndNewContract","dialog1","res","item","Show","console","log","getContractt","Body","response","axios","post","$store","state","url","token","i","length","e","alert","activated"],"sources":["src/components/MyContract.vue"],"sourcesContent":["<template class=\"main\">\n    <v-app>   \n        <section >\n        \n        <my-menu></my-menu>\n        </section>\n        <section class=\"content\" >\n        <h1>Контракты</h1>\n        <v-divider></v-divider>\n            <v-container>\n                <v-row>\n                    <v-dialog \n                        v-model=\"$store.state.dialog1\"\n                        persistent\n                        max-width=\"1000px\">\n                        <template v-slot:activator=\"{ on, attrs }\"> \n                            <v-btn \n                                outlined  \n                                icon color=\"green\" \n                                v-bind=\"attrs\" \n                                v-on=\"on\">\n                                    <v-icon >mdi-plus</v-icon>\n                            </v-btn>\n                        </template>\n                        <my-create-contract></my-create-contract>\n                    </v-dialog>               \n                    <template>\n                        <v-btn class=\"btn\"\n                            outlined  \n                            icon color=\"blue\" \n                            @click=\"search=!search\"\n                            >\n                                <v-icon >mdi-magnify</v-icon>\n                        </v-btn>\n                    </template>  \n                    <v-dialog v-model=\"dialogDelete\" \n                    persistent\n                    max-width=\"600px\">\n                    <template v-slot:activator=\"{ on, attrs }\">\n                        <v-btn outlined  \n                            icon color=\"red\"\n                            v-bind=\"attrs\" \n                            v-on=\"on\">\n                                <v-icon>mdi-delete</v-icon>\n                        </v-btn>\n                    </template>\n                    <v-card>\n                        <v-card-text>\n                            Вы хотите удалить только контрагента или связанные с ним контракты тоже?\n                        </v-card-text>\n                        <v-card-actions>\n                            <v-btn @click=\"dialogDelete=!dialogDelete\">Отмена</v-btn>\n                            <v-btn @click=\"dialogDelete=!dialogDelete\">Только контрагента</v-btn>\n                            <v-btn @click=\"dialogDelete=!dialogDelete\">Вместе с контрактами</v-btn>\n                        </v-card-actions>\n                    </v-card>\n                    </v-dialog>             \n                </v-row>\n                <section v-show=\"search\" class=\"search\">\n                    <v-row>\n                        <v-col v-for=\"(field, index) in fields\" :key=\"index\" cols=\"2,5\">  \n                                                     \n                                <template class=\"input\" v-if=\"field.type === 'select'\">\n                                    <v-select :items=\"type\" v-model=\"forSearch[field.model]\"></v-select>\n                                </template>                               \n                                <template class=\"input\" v-else>\n                                    <v-text-field  :type=\"field.type\" v-model=\"forSearch[field.model]\" ></v-text-field>\n                                </template>\n                                <label class=\"label\"> {{ field.name }}</label> \n                            </v-col>\n                    </v-row>\n                    \n                    <template>\n                        <v-btn rounded  outlined color=\"green\">Найти</v-btn>\n                    </template>\n                </section>\n                \n            </v-container>        \n            <v-divider></v-divider>\n            <v-container>\n                <v-simple-table height=\"300px\" class=\"table\" >\n                    <template  v-slot:default>\n                        <thead>\n                            <th v-for=\"item in headers\" :key=\"item.text\">\n                                {{ item.text }}\n                            </th>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"(item) in contracts\"\n                                :key=\"item.idndex\"\n                                @click=\"Show(item), setActive=item.name\"\n                                :class = \"{'blue lighten-5': setActive===item.name}\"\n                                >\n                                <td>{{ item.name}}</td>\n                                <td>{{ item.type }}</td>\n                                <td>{{ item.plannedStartDate }}</td>\n                                <td>{{ item.plannedEndDate }}</td>\n                                <td>{{ item.actualStartDate }}</td>\n                                <td>{{ item.actualEndDate }}</td>\n                                <td>{{ item.amount }}</td>\n                                <td><div v-for=\"(items,id) in item.phases\" :key='id'>{{ items.name }}</div></td>\n                                <td><div v-for=\"(items,id) in item.contractCounterparties\" :key='id'>{{ items.name }}</div></td>\n                                <td>\n                                    <router-link class=\"btn\" :to=\"{name:'contractPage', params: {name: `${item.name}`}}\">\n                                        <v-btn outlined small depressed>\n                                            Открыть\n                                        </v-btn>\n                                    </router-link>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </template>\n                </v-simple-table>           \n            </v-container>\n        </section>\n        {{ $store.state.token }}\n        <span>   \n            <router-link class=\"btn\" :to=\"{name: 'menu'}\">\n                <v-btn color=\" light\"> Назад в меню </v-btn>\n            </router-link> \n        </span>       \n        <span>\n            <v-btn\n            @click=\"getContractt()\">\n            download</v-btn>\n        </span>  \n        {{ testLocal }}{{ $store.state.tokenType }}\n    </v-app>\n</template>\n\n<script>\nimport { mapGetters, mapMutations,mapActions } from 'vuex';\nimport MyMenu from '../components/MyMenu.vue';\nimport MyCreateContract from '../components/MyCreateContract.vue';\nexport default {\n    name: 'MyContract',\n    components: {\n        MyMenu,\n        MyCreateContract,\n    },\n    data() { \n        return {  \n            setActive: '',    \n            forSearch: {\n                name: '',\n                type: '',\n                plannedStartDate: '',\n                plannedEndDate: '',\n                actualStartDate: '',\n                actualEndDate: '',\n                amount: '',\n            },     \n            dialog2: false,\n            search: false,\n            fields: \n            [{name: 'Название', model: 'name', type: ''},\n            {name: 'Тип', model: 'type', type: 'select'},\n            {name: 'Плановая Дата Начала', model: 'plannedStartDate', type: 'date'},\n            {name: 'Плановая дата окончания', model: 'plannedEndDate', type: 'date'},\n            {name: 'Фактическая дата начала', model: 'actualSartDate', type: 'date'},\n            {name: 'Фактическая дата окончания', model: 'actualEndDate', type: 'date'},\n            {name: 'Сумма', model: 'amount', type: ''}],\n            newContract:\n                {\n                    name: '',\n                    type: '',\n                    plannedStartDate: '',\n                    plannedEndDate: '',\n                    actualStartDate: '',\n                    actualEndDate: '',\n                    amount: '',\n                    phases: [{ \n                        name: '',\n                        amount: '',\n                        planAmount: '',\n                        factAmount: '',\n                        plannedStartDate: '',\n                        plannedEndDate: '',\n                        actualStartDate: '',\n                        actualEndDate: '',\n                    }],\n                    contractCounterparties: [{ \n                        name: '',\n                        amount: '',\n                        organization: '',\n                        type: '',\n                        plannedStartDate: '',\n                        plannedEndDate: '',\n                        actualStartDate: '',\n                        actualEndDate: '',\n                    }]\n                },\n                testLocal: localStorage.tok,\n        }\n    },\n    computed:{\n        ...mapGetters({\n            headers: 'contractsModul/headers',           \n            contracts: 'contracts',\n            type: 'contractsModul/type',\n        \n        }),\n        \n    },\n\n    methods: {\n        ...mapMutations({\n            addNewContract: 'ADD_NEW_CONTRACT',\n            addAllContracts: 'ADD_ALL_CONTRACTS'\n        }),\n        sndNewContract() {\n            this.dialog1 = false;\n            const res = {};\n            for (let item in this.newContract) {\n               res[item] = this.newContract[item];\n            }\n            this.addNewContract(res);\n            for (let item in this.newContract) {\n               this.newContract[item] = '';\n            };\n               \n        },\n        Show(item) {\n            console.log(item.name)\n        },\n\n        async getContractt() {\n            try {\n                const Body = {};\n                const response = await axios.post(this.$store.state.url + '/api/menu/contracts/show', \n                \n                    Body,\n                \n                {headers: {\n                    \"Authorization\":  \"Bearer \" + localStorage.token,               \n                }})\n                console.log(response)\n                for (let i = 0; i<response.data.length; i++)  {\n                    console.log(i);\n                    this.addAllContracts(response.data[i])\n                    console.log(response.data[i]);                   \n                }                         \n            } \n            catch(e) {\n                alert('Error is true')\n            }      \n        },\n    },\n\n    activated() {\n      this.getContractt()\n    }\n}\n\n</script>\n\n<style scoped>\n.content {\n    padding-left: 280px;\n    padding-top: 20px;\n    position: fixed;\n}\n.btn {\n    margin-left:20px\n}\n.table {\n    border: 1px solid black;\n    overflow-y: auto;\n    width: 1500px;\n}\nth {\n    width: 250px;\n}\n.search {\n    padding-top: 20px;\n}\n.label {\n    color: rgb(168, 165, 165);\n    padding-bottom: 50px;\n}\n.input{\n    padding-top: 50px;\n}\n.v-data-table_wrapper {\n    overflow-y: auto;\n}\n</style>\n\n"],"mappings":"AAmIA,SAAAA,UAAA,EAAAC,YAAA,EAAAC,UAAA;AACA,OAAAC,MAAA;AACA,OAAAC,gBAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAH,MAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,SAAA;MACAC,SAAA;QACAJ,IAAA;QACAK,IAAA;QACAC,gBAAA;QACAC,cAAA;QACAC,eAAA;QACAC,aAAA;QACAC,MAAA;MACA;MACAC,OAAA;MACAC,MAAA;MACAC,MAAA,EACA;QAAAb,IAAA;QAAAc,KAAA;QAAAT,IAAA;MAAA,GACA;QAAAL,IAAA;QAAAc,KAAA;QAAAT,IAAA;MAAA,GACA;QAAAL,IAAA;QAAAc,KAAA;QAAAT,IAAA;MAAA,GACA;QAAAL,IAAA;QAAAc,KAAA;QAAAT,IAAA;MAAA,GACA;QAAAL,IAAA;QAAAc,KAAA;QAAAT,IAAA;MAAA,GACA;QAAAL,IAAA;QAAAc,KAAA;QAAAT,IAAA;MAAA,GACA;QAAAL,IAAA;QAAAc,KAAA;QAAAT,IAAA;MAAA;MACAU,WAAA,EACA;QACAf,IAAA;QACAK,IAAA;QACAC,gBAAA;QACAC,cAAA;QACAC,eAAA;QACAC,aAAA;QACAC,MAAA;QACAM,MAAA;UACAhB,IAAA;UACAU,MAAA;UACAO,UAAA;UACAC,UAAA;UACAZ,gBAAA;UACAC,cAAA;UACAC,eAAA;UACAC,aAAA;QACA;QACAU,sBAAA;UACAnB,IAAA;UACAU,MAAA;UACAU,YAAA;UACAf,IAAA;UACAC,gBAAA;UACAC,cAAA;UACAC,eAAA;UACAC,aAAA;QACA;MACA;MACAY,SAAA,EAAAC,YAAA,CAAAC;IACA;EACA;EACAC,QAAA;IACA,GAAA7B,UAAA;MACA8B,OAAA;MACAC,SAAA;MACArB,IAAA;IAEA;EAEA;EAEAsB,OAAA;IACA,GAAA/B,YAAA;MACAgC,cAAA;MACAC,eAAA;IACA;IACAC,eAAA;MACA,KAAAC,OAAA;MACA,MAAAC,GAAA;MACA,SAAAC,IAAA,SAAAlB,WAAA;QACAiB,GAAA,CAAAC,IAAA,SAAAlB,WAAA,CAAAkB,IAAA;MACA;MACA,KAAAL,cAAA,CAAAI,GAAA;MACA,SAAAC,IAAA,SAAAlB,WAAA;QACA,KAAAA,WAAA,CAAAkB,IAAA;MACA;MAAA;IAEA;IACAC,KAAAD,IAAA;MACAE,OAAA,CAAAC,GAAA,CAAAH,IAAA,CAAAjC,IAAA;IACA;IAEA,MAAAqC,aAAA;MACA;QACA,MAAAC,IAAA;QACA,MAAAC,QAAA,SAAAC,KAAA,CAAAC,IAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAC,GAAA,+BAEAN,IAAA,EAEA;UAAAb,OAAA;YACA,6BAAAH,YAAA,CAAAuB;UACA;QAAA;QACAV,OAAA,CAAAC,GAAA,CAAAG,QAAA;QACA,SAAAO,CAAA,MAAAA,CAAA,GAAAP,QAAA,CAAArC,IAAA,CAAA6C,MAAA,EAAAD,CAAA;UACAX,OAAA,CAAAC,GAAA,CAAAU,CAAA;UACA,KAAAjB,eAAA,CAAAU,QAAA,CAAArC,IAAA,CAAA4C,CAAA;UACAX,OAAA,CAAAC,GAAA,CAAAG,QAAA,CAAArC,IAAA,CAAA4C,CAAA;QACA;MACA,EACA,OAAAE,CAAA;QACAC,KAAA;MACA;IACA;EACA;EAEAC,UAAA;IACA,KAAAb,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}