{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport contractsModul from '../moduls/contractsModul';\nimport organization from '../moduls/organization';\nVue.use(Vuex);\nexport const store = new Vuex.Store({\n  state: {\n    url: 'http://212.118.43.99:8080',\n    token: '',\n    tokenType: 'Bearer',\n    name: '',\n    fullname: '',\n    dialog1: false,\n    contragents: [{\n      name: 'ann',\n      inn: \"fgnhn\",\n      address: 'dfvdf'\n    }],\n    contracts: [{\n      name: 'ann',\n      type: '',\n      plannedStartDate: '',\n      plannedEndDate: '',\n      actualStartDate: '',\n      actualEndDate: '',\n      amount: '',\n      phases: [{\n        name: '',\n        amount: '',\n        planAmount: '',\n        factAmount: '',\n        plannedStartDate: '',\n        plannedEndDate: '',\n        actualStartDate: '',\n        actualEndDate: ''\n      }],\n      contractCounterparties: [{\n        name: '',\n        amount: '',\n        organization: '',\n        type: '',\n        plannedStartDate: '',\n        plannedEndDate: '',\n        actualStartDate: '',\n        actualEndDate: ''\n      }]\n    }]\n  },\n  getters: {\n    contragent(state) {\n      return state.contragents;\n    },\n    contracts(state) {\n      return state.contracts;\n    }\n  },\n  mutations: {\n    ADD_TOKEN(state, payload) {\n      state.token = payload;\n      localStorage.setItem('token', \"50\");\n    },\n    ADD_NAME(state, payload) {\n      state.name = payload;\n      state.fullname = state.name.split(' ', 2);\n      localStorage.setItem('name', state.fullname);\n    },\n    CLOSE_DIALOG(state) {\n      state.dialog1 = !state.dialog1;\n    },\n    ADD_ALL_CONTRAGENTS(state, payload) {\n      state.contragents.push(payload);\n    },\n    ADD_NEW_CONTRAGENTS(state, payload) {\n      state.contragents.push(payload);\n    },\n    DELETE_CONTRAGENT(state, index) {\n      state.contragents.splice(index, 1);\n    },\n    ADD_NEW_CONTRACT(state, payload) {\n      state.contracts.push(payload);\n    },\n    ADD_ALL_CONTRACTS(state, payload) {\n      state.contracts.push(payload);\n    },\n    DELETE_CONTRACT(state, index) {\n      state.contracts.splice(index, 1);\n    }\n  },\n  actions: {\n    deleteContragent({\n      commit,\n      state\n    }, name) {\n      const index = state.contragents.findIndex(c => c.name === name);\n      if (index !== -1) {\n        commit('DELETE_CONTRAGENT', index);\n      }\n    },\n    deleteContract({\n      commit,\n      state\n    }, name) {\n      const index = state.contracts.findIndex(c => c.name === name);\n      if (index !== -1) {\n        commit('DELETE_CONTRACT', index);\n      }\n    }\n  },\n  modules: {\n    contractsModul,\n    organization\n  }\n});\nexport default store;","map":{"version":3,"names":["Vue","Vuex","contractsModul","organization","use","store","Store","state","url","token","tokenType","name","fullname","dialog1","contragents","inn","address","contracts","type","plannedStartDate","plannedEndDate","actualStartDate","actualEndDate","amount","phases","planAmount","factAmount","contractCounterparties","getters","contragent","mutations","ADD_TOKEN","payload","localStorage","setItem","ADD_NAME","split","CLOSE_DIALOG","ADD_ALL_CONTRAGENTS","push","ADD_NEW_CONTRAGENTS","DELETE_CONTRAGENT","index","splice","ADD_NEW_CONTRACT","ADD_ALL_CONTRACTS","DELETE_CONTRACT","actions","deleteContragent","commit","findIndex","c","deleteContract","modules"],"sources":["/home/ann/vue/testovoe_zadanie/AccountingSystem/frontend/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\n\nimport contractsModul from '../moduls/contractsModul';\nimport organization from '../moduls/organization'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n  state: {\n    \n    url: 'http://212.118.43.99:8080',   \n    token: '',\n    tokenType: 'Bearer',\n    name: '',\n    fullname: '',\n    dialog1: false,\n    contragents: [{\n      name: 'ann',\n      inn: \"fgnhn\",\n      address: 'dfvdf'\n      }],\n    contracts: [{\n      name: 'ann',\n      type: '',\n      plannedStartDate: '',\n      plannedEndDate: '',\n      actualStartDate: '',\n      actualEndDate: '',\n      amount: '',\n      phases: [{ \n          name: '',\n          amount: '',\n          planAmount: '',\n          factAmount: '',\n          plannedStartDate: '',\n          plannedEndDate: '',\n          actualStartDate: '',\n          actualEndDate: '',\n      }],\n      contractCounterparties: [{ \n          name: '',\n          amount: '',\n          organization: '',\n          type: '',\n          plannedStartDate: '',\n          plannedEndDate: '',\n          actualStartDate: '',\n          actualEndDate: '',\n      }]\n  },],\n\n  },\n\n  getters: {\n    contragent(state) {\n      return state.contragents\n    },\n    contracts(state) {\n      return state.contracts\n    },\n  },\n\n\n  mutations: {\n    ADD_TOKEN(state, payload) {\n      state.token = payload\n      localStorage.setItem('token', \"50\")\n      \n    },\n    ADD_NAME(state,payload) {\n      state.name = payload\n      state.fullname = state.name.split(' ', 2)\n      localStorage.setItem('name', state.fullname)\n    },\n    CLOSE_DIALOG(state) {\n      state.dialog1 = !state.dialog1\n      \n    },\n    ADD_ALL_CONTRAGENTS(state, payload){\n      state.contragents.push(payload)\n    },\n    ADD_NEW_CONTRAGENTS(state, payload){\n        state.contragents.push(payload)\n    },\n    DELETE_CONTRAGENT(state, index) {\n        state.contragents.splice(index, 1);\n      },\n    \n\n      ADD_NEW_CONTRACT(state, payload) {\n        state.contracts.push(payload)\n    },\n    ADD_ALL_CONTRACTS(state, payload){\n        state.contracts.push(payload)\n    },\n    DELETE_CONTRACT(state, index) {\n        state.contracts.splice(index, 1);\n      },\n  },\n  \n  actions: {\n    deleteContragent({ commit, state }, name) {\n      const index = state.contragents.findIndex(c => c.name === name)\n      if (index !== -1) {\n        commit('DELETE_CONTRAGENT', index)\n      }\n    },\n    deleteContract({ commit, state }, name) {\n      const index = state.contracts.findIndex(c => c.name === name)\n      if (index !== -1) {\n        commit('DELETE_CONTRACT', index)\n      }\n    }\n  \n  },\n\n  modules: {\n    \n    contractsModul,\n    organization,\n   \n  }\n});\n\nexport default store;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}