{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters, mapMutations } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'MyFormEnter',\n  props: {},\n  data() {\n    return {\n      showPassword: false,\n      pasType: 'password',\n      firstName: '',\n      secondName: '',\n      middleName: '',\n      password: \"\",\n      username: \"\",\n      fullname: '',\n      names: '',\n      data: 201,\n      success: false,\n      registr: '',\n      user: {\n        firstName: '',\n        secondName: '',\n        middleName: '',\n        password: \"\",\n        username: \"\"\n      },\n      fields: [{\n        placeholder: 'Имя',\n        model: 'firstName'\n      }, {\n        placeholder: 'Фамилия',\n        model: 'secondNfme'\n      }, {\n        placeholder: 'Отчество',\n        model: 'middlefAme'\n      }, {\n        placeholder: 'Имя Пользователя',\n        model: 'username'\n      }, {\n        placeholder: 'Пароль',\n        model: 'password'\n      }]\n    };\n  },\n  methods: {\n    ...mapMutations({\n      addToken: 'ADD_TOKEN',\n      addName: 'ADD_NAME'\n    }),\n    showPas() {\n      this.showPassword = !this.showPassword;\n      this.pasType = this.pasType === \"password\" ? \"text\" : \"password\";\n    },\n    async registrate() {\n      try {\n        const response = await axios.post(this.$store.state.url + '/api/auth/register', {\n          username: this.user.username,\n          password: this.user.password,\n          firstName: this.user.firstName,\n          secondName: this.user.secondName,\n          middleName: this.user.middleName\n        });\n        console.log(response);\n        console.log(response.data);\n        if (response.status === this.data) {\n          this.success = true;\n        }\n        if (this.success == true) {\n          this.addToken(response.data.accessToken);\n          this.addFirstName(response.data.firstName);\n          this.addSurName(response.data.secondName);\n        }\n      } catch (e) {\n        alert('Неверно ');\n      }\n    },\n    goToMenu() {\n      if (this.success == true) {\n        this.$router.push('menu');\n      }\n      console.log(1);\n    },\n    add() {\n      setTimeout(this.goToMenu, 1000);\n    },\n    addLocal() {\n      localStorage.setItem('tok', '50');\n    },\n    Name() {\n      this.names = this.fullname.split(' ', 2);\n      return this.names;\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapMutations","axios","name","props","data","showPassword","pasType","firstName","secondName","middleName","password","username","fullname","names","success","registr","user","fields","placeholder","model","methods","addToken","addName","showPas","registrate","response","post","$store","state","url","console","log","status","accessToken","addFirstName","addSurName","e","alert","goToMenu","$router","push","add","setTimeout","addLocal","localStorage","setItem","Name","split"],"sources":["src/components/MyFormRegistr.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form>\n            <v-container>\n                <v-card width=\"400px\" class=\"mx-auto mt-5\">\n                    <v-card-title class=\"pb-0\">\n                        <h2>Регистрация</h2>\n                    </v-card-title>\n                    <v-card-text>\n                        <section>\n                            <span v-for=\"(field, index) in fields\">\n                                <template v-if=\"field.model==='password'\">\n                                    <v-text-field :placeholder=field.placeholder\n                                    :type='pasType' \n                                    :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                                    @click:append=\"showPas\"\n                                    v-model=\"user[field.model]\"\n                                    >\n                                    </v-text-field>\n                                </template>\n                                <template v-else>\n                                    <v-text-field :placeholder=field.placeholder\n                                    v-model=\"user[field.model]\"\n                                    >\n\n                                    </v-text-field>\n                                </template>\n\n                            </span>\n                            <v-text-field placeholder=\"Surname\" \n                                name=\"surname\"\n                                v-model.trim=\"secondName\"\n                                \n                            ></v-text-field>\n                            <v-text-field placeholder=\"Name\" \n                                name=\"name\"\n                                v-model.trim=\"firstName\"\n                            ></v-text-field>\n                            <v-text-field placeholder=\"Middle name\" \n                                name=\"Middle name\"\n                                v-model.trim=\"middleName\"\n                            ></v-text-field>\n                        \n                        <v-text-field placeholder=\"Username\" \n                            name=\"username\"\n                            v-model=\"username\"                            \n                        ></v-text-field>\n                        <v-text-field  \n                            placeholder=\"Password\" \n                            :type='pasType' \n                            name=\"password\"\n                            :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                            @click:append=\"showPas\"\n                            v-model=\"password\"\n                        ></v-text-field>  \n                    </section>\n                    </v-card-text>         \n                    <v-card-actions>\n                        <router-link class=\"btn\" :to=\"{name: 'FormEnter'}\">\n                            <v-btn color=\" light\"> Назад</v-btn>\n                        </router-link> \n                        <router-link class='btn' :to=\"this.registr\">\n                            <v-btn @mousedown=\"registrate()\" \n                                @click=\"add()\"\n                                class=\"buttn\" \n                                color=\"success\"\n                                > Зарегестрироваться</v-btn>\n                        </router-link> \n                        <router-link  :to=\"{name: 'menu'}\">\n                            <v-btn \n                                class=\"buttn\" \n                                color=\"success\"\n                                @click=addLocal()\n                                > ghbdth</v-btn>\n                        </router-link>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n        \n    </v-app>\n</template>\n  \n<script>\nimport { mapGetters, mapMutations } from 'vuex';\nimport axios from 'axios';\n\n    export default {\n        name: 'MyFormEnter',\n    \n        props: {\n            \n        },\n    \n        data() {\n            return {\n                showPassword: false,\n                pasType: 'password',\n                firstName: '',\n                secondName: '',\n                middleName: '',\n                password: \"\",\n                username: \"\",\n                fullname: '',\n                names: '',\n                data: 201,\n                success: false,\n                registr: '',    \n                user: {\n                    firstName: '',\n                    secondName: '',\n                    middleName: '',\n                    password: \"\",\n                    username: \"\",\n                },\n                fields:[\n                    {placeholder: 'Имя', model: 'firstName'},\n                    {placeholder: 'Фамилия', model: 'secondNfme'},\n                    {placeholder: 'Отчество', model: 'middlefAme'},\n                    {placeholder: 'Имя Пользователя', model: 'username'},\n                    {placeholder: 'Пароль', model: 'password'}\n                ]     \n            }\n        },\n        \n        methods: {\n            ...mapMutations({\n            addToken: 'ADD_TOKEN',\n            addName: 'ADD_NAME'}),\n\n            showPas() {\n                this.showPassword = !this.showPassword\n                this.pasType = this.pasType === \"password\" ? \"text\" : \"password\"               \n            },\n            \n            async registrate() {\n                try {\n                    const response = await axios.post(this.$store.state.url + '/api/auth/register', {\n                        username: this.user.username,\n                        password: this.user.password,\n                        firstName: this.user.firstName,\n                        secondName: this.user.secondName,\n                        middleName: this.user.middleName,\n                        \n                    });\n                    console.log(response)\n                    console.log(response.data)            \n                    if (response.status === this.data) {\n                        this.success = true\n                    }  \n                    if  (this.success == true) {\n                        this.addToken(response.data.accessToken)\n                        this.addFirstName(response.data.firstName)\n                        this.addSurName(response.data.secondName)\n                }                      \n                } \n                catch(e) {\n                    alert('Неверно ')\n                }      \n            },\n\n            goToMenu() {\n            if (this.success == true) {\n                this.$router.push('menu')   \n            }           \n            console.log(1)\n        },\n        \n        add() {\n            setTimeout(this.goToMenu, 1000)           \n        },\n        addLocal() {\n            localStorage.setItem('tok', '50');\n        },\n        \n\n        Name() {\n            this.names = this.fullname.split(' ', 2)\n            return this.names\n        },\n    \n        }\n    }\n</script>\n  \n<style  scoped>\n.btn {\n    text-decoration: none\n}\n  \n  \n</style> "],"mappings":";AAoFA,SAAAA,UAAA,EAAAC,YAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EAEAC,KAAA,GAEA;EAEAC,KAAA;IACA;MACAC,YAAA;MACAC,OAAA;MACAC,SAAA;MACAC,UAAA;MACAC,UAAA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,KAAA;MACAT,IAAA;MACAU,OAAA;MACAC,OAAA;MACAC,IAAA;QACAT,SAAA;QACAC,UAAA;QACAC,UAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAM,MAAA,GACA;QAAAC,WAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,WAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,WAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,WAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,WAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EAEAC,OAAA;IACA,GAAApB,YAAA;MACAqB,QAAA;MACAC,OAAA;IAAA;IAEAC,QAAA;MACA,KAAAlB,YAAA,SAAAA,YAAA;MACA,KAAAC,OAAA,QAAAA,OAAA;IACA;IAEA,MAAAkB,WAAA;MACA;QACA,MAAAC,QAAA,SAAAxB,KAAA,CAAAyB,IAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAC,GAAA;UACAlB,QAAA,OAAAK,IAAA,CAAAL,QAAA;UACAD,QAAA,OAAAM,IAAA,CAAAN,QAAA;UACAH,SAAA,OAAAS,IAAA,CAAAT,SAAA;UACAC,UAAA,OAAAQ,IAAA,CAAAR,UAAA;UACAC,UAAA,OAAAO,IAAA,CAAAP;QAEA;QACAqB,OAAA,CAAAC,GAAA,CAAAN,QAAA;QACAK,OAAA,CAAAC,GAAA,CAAAN,QAAA,CAAArB,IAAA;QACA,IAAAqB,QAAA,CAAAO,MAAA,UAAA5B,IAAA;UACA,KAAAU,OAAA;QACA;QACA,SAAAA,OAAA;UACA,KAAAO,QAAA,CAAAI,QAAA,CAAArB,IAAA,CAAA6B,WAAA;UACA,KAAAC,YAAA,CAAAT,QAAA,CAAArB,IAAA,CAAAG,SAAA;UACA,KAAA4B,UAAA,CAAAV,QAAA,CAAArB,IAAA,CAAAI,UAAA;QACA;MACA,EACA,OAAA4B,CAAA;QACAC,KAAA;MACA;IACA;IAEAC,SAAA;MACA,SAAAxB,OAAA;QACA,KAAAyB,OAAA,CAAAC,IAAA;MACA;MACAV,OAAA,CAAAC,GAAA;IACA;IAEAU,IAAA;MACAC,UAAA,MAAAJ,QAAA;IACA;IACAK,SAAA;MACAC,YAAA,CAAAC,OAAA;IACA;IAGAC,KAAA;MACA,KAAAjC,KAAA,QAAAD,QAAA,CAAAmC,KAAA;MACA,YAAAlC,KAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}