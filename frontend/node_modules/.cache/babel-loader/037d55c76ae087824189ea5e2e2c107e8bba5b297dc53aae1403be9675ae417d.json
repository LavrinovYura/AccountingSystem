{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters, mapMutations } from 'vuex';\nexport default {\n  name: 'MyEditContract',\n  props: {\n    EditContract: Object,\n    disabled: Boolean\n  },\n  data() {\n    return {\n      EditName: '',\n      NewPhase: '',\n      NewAgent: '',\n      newContract: {\n        name: '',\n        type: '',\n        plannedStartDate: '',\n        plannedEndDate: '',\n        actualStartDate: '',\n        actualEndDate: '',\n        amount: '',\n        phases: [{\n          name: '',\n          amount: '',\n          plannedSalaryExpenses: '',\n          actualSalaryExpenses: '',\n          plannedMaterialCosts: '',\n          actualMaterialCosts: '',\n          plannedStartDate: '',\n          plannedEndDate: '',\n          actualStartDate: '',\n          actualEndDate: ''\n        }],\n        contractCounterparties: [{\n          name: '',\n          amount: '',\n          organization: '',\n          type: '',\n          plannedStartDate: '',\n          plannedEndDate: '',\n          actualStartDate: '',\n          actualEndDate: ''\n        }]\n      },\n      textPhases: [{\n        name1: 'Название',\n        type1: '',\n        model1: 'name'\n      }, {\n        name1: 'Сумма',\n        type1: '',\n        model1: 'amount'\n      }, {\n        name1: 'Плановые расходы на зп',\n        type1: '',\n        model1: 'plannedSalaryExpenses'\n      }, {\n        name1: 'Фактические расходы на зп',\n        type1: '',\n        model1: 'actualSalaryExpenses'\n      }, {\n        name1: 'Плановая дата начала',\n        type1: 'Date',\n        model1: 'plannedStartDate'\n      }, {\n        name1: 'Плановая дата окончания',\n        type1: 'Date',\n        model1: 'plannedEndDate'\n      }, {\n        name1: 'Фактическая дата начала',\n        type1: 'Date',\n        model1: 'actualStartDate'\n      }, {\n        name1: 'Фактическая дата окончания',\n        type1: 'Date',\n        model1: 'actualEndDate'\n      }, {\n        name1: 'Плановые расходы на материалы',\n        type1: '',\n        model1: 'plannedMaterialCosts'\n      }, {\n        name1: 'Фактические расходы на материалы',\n        type1: '',\n        model1: 'actualMaterialCosts'\n      }],\n      textAgents: [{\n        name2: 'Название',\n        type1: '',\n        model2: 'name'\n      }, {\n        name2: 'Сумма договора',\n        type1: '',\n        model2: 'amount'\n      }, {\n        name2: 'Организация ',\n        type1: '',\n        model2: 'organization'\n      }, {\n        name2: 'Тип договора',\n        type1: '',\n        model2: 'type'\n      }, {\n        name2: 'Плановая дата начала',\n        type1: 'Date',\n        model2: 'plannedStartDate'\n      }, {\n        name2: 'Плановая дата окончания',\n        type1: 'Date',\n        model2: 'plannedEndDate'\n      }, {\n        name2: 'Фактическая дата начала',\n        type1: 'Date',\n        model2: 'actualStartDate'\n      }, {\n        name2: 'Фактическая дата окончания',\n        type1: 'Date',\n        model2: 'actualEndDate'\n      }],\n      fields: [{\n        label: 'Название',\n        model: 'name',\n        type: 'text'\n      }, {\n        label: 'Тип',\n        model: 'type',\n        type: 'select',\n        options: ['option1', 'option2']\n      }, {\n        label: 'Плановая дата начала',\n        model: 'plannedStartDate',\n        type: 'date'\n      }, {\n        label: 'Плановая дата окончания',\n        model: 'plannedEndDate',\n        type: 'date'\n      }, {\n        label: 'Фактическая дата начала',\n        model: 'actualStartDate',\n        type: 'date'\n      }, {\n        label: 'Фактическая дата окончания',\n        model: 'actualEndDate',\n        type: 'date'\n      }, {\n        label: 'Сумма договора',\n        model: 'amount',\n        type: 'text'\n      }],\n      selectedWord: '',\n      filteredWords: [],\n      dialog2: false\n    };\n  },\n  methods: {\n    ...mapMutations({\n      addNewContract: 'ADD_NEW_CONTRACT',\n      addAllContracts: 'ADD_ALL_CONTRACTS',\n      closeDialog: 'CLOSE_DIALOG'\n    }),\n    async ADDNewPhase() {\n      try {\n        const response = await axios.post(this.$store.state.url + '/api/menu/contracts/' + this.EditContract.id + '/addPhases', {\n          phases: this.NewPhase\n        }, {\n          headers: {\n            \"Authorization\": \"Bearer \" + localStorage.token\n          }\n        });\n        console.log(response);\n      } catch (e) {\n        alert('Неверно');\n      }\n    },\n    addPhase() {\n      const phases = {\n        id: 0,\n        name: '',\n        amount: '',\n        plannedSalaryExpenses: '',\n        actualSalaryExpenses: '',\n        plannedMaterialCosts: '',\n        actualMaterialCosts: '',\n        plannedStartDate: '',\n        plannedEndDate: '',\n        actualStartDate: '',\n        actualEndDate: ''\n      };\n      this.NewPhase = [...this.NewPhase, phases];\n    },\n    addContragent() {\n      const contractCounterparties = {\n        id: Date.now(),\n        name: '',\n        amount: '',\n        organization: '',\n        type: '',\n        plannedStartDate: '',\n        plannedEndDate: '',\n        actualStartDate: '',\n        actualEndDate: ''\n      };\n      this.NewAgent.push(contractCounterparties);\n    }\n  },\n  computed: {\n    ...mapGetters({\n      headers: 'contractsModul/headers',\n      contracts: 'contracts',\n      type: 'contractsModul/type',\n      dialog1: 'index/dialog1'\n    })\n  },\n  created() {\n    this.EditName = this.EditContract.name;\n  }\n};","map":{"version":3,"names":["mapGetters","mapMutations","name","props","EditContract","Object","disabled","Boolean","data","EditName","NewPhase","NewAgent","newContract","type","plannedStartDate","plannedEndDate","actualStartDate","actualEndDate","amount","phases","plannedSalaryExpenses","actualSalaryExpenses","plannedMaterialCosts","actualMaterialCosts","contractCounterparties","organization","textPhases","name1","type1","model1","textAgents","name2","model2","fields","label","model","options","selectedWord","filteredWords","dialog2","methods","addNewContract","addAllContracts","closeDialog","ADDNewPhase","response","axios","post","$store","state","url","id","headers","localStorage","token","console","log","e","alert","addPhase","addContragent","Date","now","push","computed","contracts","dialog1","created"],"sources":["src/components/MyEditContract.vue"],"sourcesContent":["<template>\n    <v-app class=\"main\">\n        <v-card class=\"card\">\n                <v-card-title>\n                    <span class=\"text-h5\"\n                    > Редактировать  {{ EditContract.id }} контракт\n                    \n                    </span>\n                </v-card-title>\n                <v-card-text>\n \n                    <v-divider></v-divider>\n                    <template>\n                        <v-row>\n                            <v-col v-for=\"(field, names, index) in fields\" :key=\"index\" cols=\"3\">\n                                <label> {{ field.label }}</label>\n                                    <template v-if=\"field.type === 'select'\">\n                                        <v-select :readonly=\"disabled\" :items=\"type\" v-model=\"EditContract[field.model]\"></v-select>\n                                    </template>\n                                \n                                <template v-else>\n                                    <v-text-field :readonly=\"disabled\" :type=\"field.type\" v-model=\"EditContract[field.model]\" ></v-text-field>\n                                </template>\n                            </v-col>\n                        </v-row>\n                        </template>\n\n                    <v-divider></v-divider>\n                    <section > \n                        \n                        <h4>Этапы</h4>\n                        <section>\n                            <v-row  v-for=\"(phase, index) in EditContract.phases\" :key=\" phase.id\"> \n                                <v-divider></v-divider>\n                                <h6>Этап </h6>\n                                <v-col v-for=\"name in textPhases\" cols=\"3\">\n                                    <label>{{ name.name1 }}\n                                        <v-text-field :readonly=\"disabled\" :type=\"name.type1\" v-model=\"phase[name.model1]\">\n                                        </v-text-field>\n                                    </label>\n                                </v-col>\n                            </v-row>\n                        </section>\n                        <section>\n                            <v-row  v-for=\"(phase, index) in NewPhase\" :key=\" phase.id\"> \n                                <v-divider></v-divider>\n                                <h6>Этап </h6>\n                                <v-col v-for=\"name in textPhases\" cols=\"3\">\n                                    <label>{{ name.name1 }}\n                                        <v-text-field :type=\"name.type1\" v-model=\"phase[name.model1]\">\n                                        </v-text-field>\n                                    </label>\n                                </v-col>\n                                <span> \n                                    <v-btn @click=\"ADDNewPhase()\" small outlined color=\"green\">\n                                        Сохранить новый этап\n                                    </v-btn>\n                                </span>\n                            </v-row>\n                            {{ NewPhase }}\n                        </section>\n                        <v-btn :readonly=\"disabled\" outlined  icon color=\"blue\"                             \n                            @click=\"addPhase\"> \n                            <v-icon >mdi-plus</v-icon>\n                        </v-btn>\n                        \n                    </section>\n                    <v-divider></v-divider>\n                    \n\n\n                    <section>\n                        <h4>Договор с контрагентом</h4>\n                        <v-divider></v-divider>\n                        <section>\n                            <v-row v-for=\"(agent, id) in EditContract.contractCounterparties\" :key=\"agent.id\">\n                                <h6>Контрагент</h6>\n                                <v-col v-for=\"(name, index) in textAgents\" cols=\"3\">\n                                    <label>{{ name.name2 }}</label>\n                                    <template v-if=\"name.model2 === 'type'\">\n                                        <v-select \n                                        clearable :items=\"type\" \n                                        :readonly=\"disabled\"\n                                        v-model=\"agent[name.model2]\"></v-select>\n                                        \n                                    </template>\n                                    <template v-else-if=\"name.model2==='organization'\">\n                                        <v-autocomplete \n                                            \n                                        :readonly=\"disabled\"\n                                            :items=\"filteredWords\"\n                                            hide-no-data\n                                            claerable\n                                            v-model.lazy=\"agent[name.model2]\"\n                                        ></v-autocomplete>\n\n                                    </template>\n                                    <template v-else>\n                                        <v-text-field :readonly=\"disabled\" :type=\"name.type1\" v-model=\"agent[name.model2]\"></v-text-field>\n                                    </template>\n                                </v-col>\n                                \n                            </v-row>\n                        </section>\n                        <section>\n                            <v-row v-for=\"(agent, id) in NewAgent\" :key=\"agent.id\">\n                                <h6>Контрагент</h6>\n                                <v-col v-for=\"(name, index) in textAgents\" cols=\"3\">\n                                    <label>{{ name.name2 }}</label>\n                                    <template v-if=\"name.model2 === 'type'\">\n                                        <v-select \n                                        clearable :items=\"type\" \n                                        :readonly=\"disabled\"\n                                        v-model=\"agent[name.model2]\"></v-select>\n                                        \n                                    </template>\n                                    <template v-else-if=\"name.model2==='organization'\">\n                                        <v-autocomplete \n                                            \n                                        :readonly=\"disabled\"\n                                            :items=\"filteredWords\"\n                                            hide-no-data\n                                            claerable\n                                            v-model.lazy=\"agent[name.model2]\"\n                                        ></v-autocomplete>\n\n                                    </template>\n                                    <template v-else>\n                                        <v-text-field :readonly=\"disabled\" :type=\"name.type1\" v-model=\"agent[name.model2]\"></v-text-field>\n                                    </template>\n                                </v-col>\n                                \n                            </v-row>\n                        </section>\n                        <v-btn :readonly=\"disabled\" outlined  icon color=\"blue\"                            \n                            @click=\"addContragent\"> \n                            <v-icon >mdi-plus</v-icon>\n                        </v-btn>\n                        \n                        \n                        <v-divider></v-divider>\n                    </section>\n                    {{ newContract.contractCounterparties }}\n                    </v-card-text>\n                \n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn\n                        color=\"blue darken-1\"\n                        text\n                        @click=\"dialog2 = true\"\n                        >Закрыть\n                    </v-btn>\n                    <v-row>\n                        <v-dialog width=\"600px\" justify-center\n                            v-model=\"dialog2\"\n                            >\n                            <v-card>\n                                <v-card-title>\n                                    <div>Вы уверены, что хотите закрыть окно?</div>\n                                    <div>Все несохраненные данные будут утеряны</div>\n                                </v-card-title>\n                                <v-card-actions>\n                                    <v-spacer></v-spacer>\n                                        <v-btn color=\"blue darken-1\"\n                                            text\n                                            @click=\"closeDialog()\"\n                                            >Закрыть\n                                        </v-btn>\n                                        <v-btn color=\"blue darken-1\"\n                                            text\n                                            @click=\"dialog2 = false\"\n                                            >Остаться\n                                        </v-btn>\n                                </v-card-actions>\n                            </v-card>\n                        </v-dialog>\n                    </v-row>\n                   \n                    <v-btn\n                        color=\"blue darken-1\"\n                        text  \n                        :disabled=\"disabled\"                              \n                        @click=\" closeDialog()\"\n                        >Сохранить\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n            \n    </v-app>\n</template>\n<script>\nimport { mapGetters, mapMutations } from 'vuex';\nexport default {\n    name: 'MyEditContract',\n    props: {EditContract: Object, \n        disabled: Boolean,\n        \n    },\n    data() {\n        return {\n            EditName: '',\n            NewPhase: '',\n            NewAgent: '',\n            newContract:\n                {\n                    name: '',\n                    type: '',\n                    plannedStartDate: '',\n                    plannedEndDate: '',\n                    actualStartDate: '',\n                    actualEndDate: '',\n                    amount: '',\n                    phases: [{ \n                        name: '',\n                        amount: '',\n                        plannedSalaryExpenses: '',\n                        actualSalaryExpenses: '',\n                        plannedMaterialCosts: '',\n                        actualMaterialCosts: '',\n                        plannedStartDate: '',\n                        plannedEndDate: '',\n                        actualStartDate: '',\n                        actualEndDate: '',\n                    }],\n                    contractCounterparties: [{ \n                        name: '',\n                        amount: '',\n                        organization: '',\n                        type: '',\n                        plannedStartDate: '',\n                        plannedEndDate: '',\n                        actualStartDate: '',\n                        actualEndDate: '',\n                    }]\n                },\n                \n            \n            textPhases: [\n                {name1: 'Название',type1: '', model1: 'name',},\n                {name1: 'Сумма',type1: '',model1: 'amount',},\n                {name1: 'Плановые расходы на зп',type1: '',model1: 'plannedSalaryExpenses', },\n                {name1: 'Фактические расходы на зп',type1: '',model1: 'actualSalaryExpenses',},\n                {name1: 'Плановая дата начала',type1: 'Date',model1: 'plannedStartDate',},\n                {name1: 'Плановая дата окончания',type1: 'Date',model1: 'plannedEndDate',}, \n                {name1: 'Фактическая дата начала',type1: 'Date',model1: 'actualStartDate',},\n                {name1: 'Фактическая дата окончания',  type1: 'Date', model1: 'actualEndDate',},\n                {name1: 'Плановые расходы на материалы',type1: '',model1: 'plannedMaterialCosts', },\n                {name1: 'Фактические расходы на материалы',type1: '',model1: 'actualMaterialCosts',},\n\n            ],\n            textAgents: [\n                {name2: 'Название', type1: '',model2: 'name'},\n                {name2: 'Сумма договора',type1: '',model2: 'amount'},\n                {name2: 'Организация ',type1: '', model2: 'organization'},\n                {name2: 'Тип договора', type1: '',model2: 'type'},\n                {name2: 'Плановая дата начала',type1: 'Date',model2: 'plannedStartDate'},\n                {name2: 'Плановая дата окончания',type1: 'Date',model2: 'plannedEndDate'},\n                {name2: 'Фактическая дата начала',type1: 'Date',model2: 'actualStartDate'},\n                {name2: 'Фактическая дата окончания',type1: 'Date',model2: 'actualEndDate'},\n\n            ],\n\n            fields: [\n                { label: 'Название', model: 'name', type: 'text' },\n                { label: 'Тип', model: 'type', type: 'select', options: ['option1', 'option2'] },\n                { label: 'Плановая дата начала', model: 'plannedStartDate', type: 'date' },\n                { label: 'Плановая дата окончания', model: 'plannedEndDate', type: 'date' },\n                { label: 'Фактическая дата начала', model: 'actualStartDate', type: 'date' },\n                { label: 'Фактическая дата окончания', model: 'actualEndDate', type: 'date' },\n                { label: 'Сумма договора', model: 'amount', type: 'text' }\n            ],\n            selectedWord: '',\n            filteredWords: [],\n            \n            dialog2: false,\n            \n        }\n    },\n    methods: {\n        ...mapMutations({\n            addNewContract: 'ADD_NEW_CONTRACT',\n            addAllContracts: 'ADD_ALL_CONTRACTS',\n            closeDialog: 'CLOSE_DIALOG'\n        }),\n\n        async ADDNewPhase() {\n            try {\n                const response = await axios.post(this.$store.state.url + '/api/menu/contracts/' + this.EditContract.id + '/addPhases',\n                {\n                    phases: this.NewPhase,\n                    \n\n                    },\n                {headers: {\n                    \"Authorization\":  \"Bearer \" + localStorage.token,\n                }});\n                console.log(response)\n                \n            }\n            \n            catch(e) {\n                alert('Неверно')\n            }\n        },\n\n        addPhase() {\n            const phases= { \n                id: 0,\n                name: '',\n                amount: '',\n                plannedSalaryExpenses: '',\n                actualSalaryExpenses: '',\n                plannedMaterialCosts: '',\n                actualMaterialCosts: '',\n                plannedStartDate: '',\n                plannedEndDate: '',\n                actualStartDate: '',\n                actualEndDate: '',\n            }    \n            \n            \n            this.NewPhase = [...this.NewPhase, phases];\n},\n\n        addContragent() {\n            const contractCounterparties= { \n                id: Date.now(),\n                name: '',\n                amount: '',\n                organization: '',\n                type: '',\n                plannedStartDate: '',\n                plannedEndDate: '',\n                actualStartDate: '',\n                actualEndDate: '',           \n            }\n            \n            this.NewAgent.push(contractCounterparties)\n        },\n\n        \n       \n    },\n    computed:{\n        ...mapGetters({\n            headers: 'contractsModul/headers',           \n            contracts: 'contracts',\n            type: 'contractsModul/type',\n            dialog1: 'index/dialog1'\n        }),\n        \n    },\n    created() {\n        this.EditName=this.EditContract.name\n    }\n}\n\n\n</script>\n\n<style scoped>\n.card {\n    width: 100%;\n}\n.btn {\n    margin-left:20px\n}\n\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}