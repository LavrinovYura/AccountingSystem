{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'MyFormEnter',\n  props: {},\n  data() {\n    return {\n      showPassword: false,\n      pasType: 'password',\n      name: '',\n      surname: '',\n      middleName: '',\n      password: \"\",\n      username: \"\",\n      fullname: '',\n      url: 'http://4.tcp.eu.ngrok.io:12937/api/auth/register'\n    };\n  },\n  methods: {\n    showPas() {\n      this.showPassword = !this.showPassword;\n      this.pasType = this.pasType === \"password\" ? \"text\" : \"password\";\n    },\n    async registrate() {\n      try {\n        const response = await axios.post(this.url, {\n          username: this.fullname,\n          password: this.password,\n          fullName: this.fullname\n        });\n        console.log(response);\n      } catch (e) {\n        alert('Ошибка');\n      }\n    }\n  },\n  computed: {\n    FullName() {\n      this.fullName = this.surname + this.name + this.middleName;\n      return this.fullname;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","data","showPassword","pasType","surname","middleName","password","username","fullname","url","methods","showPas","registrate","response","post","fullName","console","log","e","alert","computed","FullName"],"sources":["src/components/MyFormRegistr.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form>\n            <v-container>\n                <v-card width=\"400px\" class=\"mx-auto mt-5\">\n                    <v-card-title class=\"pb-0\">\n                        <h2>Регистрация</h2>\n                    </v-card-title>\n                    <v-card-text>\n                        <v-text-field placeholder=\"Surname\" \n                            name=\"surname\"\n                            v-model=\"surname\"\n                        ></v-text-field>\n                        <v-text-field placeholder=\"Name\" \n                            name=\"name\"\n                            v-model=\"name\"\n                        ></v-text-field>\n                        <v-text-field placeholder=\"Middle name\" \n                            name=\"Middle name\"\n                            v-model=\"middleName\"\n                        ></v-text-field>\n                        <v-text-field placeholder=\"Username\" \n                            name=\"username\"\n                            v-model=\"username\"\n                        ></v-text-field>\n                        <v-text-field  \n                            placeholder=\"Password\" \n                            :type='pasType' \n                            name=\"password\"\n                            :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                            @click:append=\"showPas\"\n                            v-model=\"password\"\n                        ></v-text-field>  \n                        {{ fullname } }fdvf                   \n                    </v-card-text>         \n                    <v-card-actions>\n                        <router-link class=\"btn\" :to=\"{name: 'FormEnter'}\">\n                            <v-btn color=\" light\"> Назад</v-btn>\n                        </router-link> \n                        <router-link class='btn' :to=\"{name: 'registration'}\">\n                            <v-btn @click=\"registrate()\" \n                                class=\"buttn\" \n                                color=\"success\"\n                                > Зарегестрироваться</v-btn>\n                        </router-link> \n                        <router-link  :to=\"{name: 'menu'}\">\n                            <v-btn \n                                class=\"buttn\" \n                                color=\"success\"\n                                > ghbdth</v-btn>\n                        </router-link>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n    </v-app>\n</template>\n  \n<script>\n    import axios from 'axios';\n\n    export default {\n        name: 'MyFormEnter',\n    \n        props: {\n            \n        },\n    \n        data() {\n            return {\n                showPassword: false,\n                pasType: 'password',\n                name: '',\n                surname: '',\n                middleName: '',\n                password: \"\",\n                username: \"\",\n                fullname: '',\n                url: 'http://4.tcp.eu.ngrok.io:12937/api/auth/register',\n            }\n        },\n        \n        methods: {\n            showPas() {\n                this.showPassword = !this.showPassword\n                this.pasType = this.pasType === \"password\" ? \"text\" : \"password\"\n                \n            },\n            async registrate() {\n                try {\n                    const response = await axios.post(this.url, {\n                        username: this.fullname,\n                        password: this.password,\n                        fullName: this.fullname,\n                    });\n                    console.log(response)\n                } \n                catch(e) {\n                    alert('Ошибка')\n                }      \n            }\n        },\n    \n        computed: {\n            FullName() {\n                this.fullName = this.surname + this.name + this.middleName\n                return this.fullname\n\n            }\n    \n        }\n        \n            \n    }\n</script>\n  \n<style>\n.btn {\n    text-decoration: none\n}\n  \n  \n</style> "],"mappings":"AA2DA,OAAAA,KAAA;AAEA;EACAC,IAAA;EAEAC,KAAA,GAEA;EAEAC,KAAA;IACA;MACAC,YAAA;MACAC,OAAA;MACAJ,IAAA;MACAK,OAAA;MACAC,UAAA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,GAAA;IACA;EACA;EAEAC,OAAA;IACAC,QAAA;MACA,KAAAT,YAAA,SAAAA,YAAA;MACA,KAAAC,OAAA,QAAAA,OAAA;IAEA;IACA,MAAAS,WAAA;MACA;QACA,MAAAC,QAAA,SAAAf,KAAA,CAAAgB,IAAA,MAAAL,GAAA;UACAF,QAAA,OAAAC,QAAA;UACAF,QAAA,OAAAA,QAAA;UACAS,QAAA,OAAAP;QACA;QACAQ,OAAA,CAAAC,GAAA,CAAAJ,QAAA;MACA,EACA,OAAAK,CAAA;QACAC,KAAA;MACA;IACA;EACA;EAEAC,QAAA;IACAC,SAAA;MACA,KAAAN,QAAA,QAAAX,OAAA,QAAAL,IAAA,QAAAM,UAAA;MACA,YAAAG,QAAA;IAEA;EAEA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}